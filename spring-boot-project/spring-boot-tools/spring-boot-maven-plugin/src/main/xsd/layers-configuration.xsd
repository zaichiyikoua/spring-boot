<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<xsd:schema elementFormDefault="qualified"
			xmlns="http://www.springframework.org/schema/boot/layers"
			xmlns:xsd="http://www.w3.org/2001/XMLSchema"
			targetNamespace="http://www.springframework.org/schema/boot/layers">
	<xsd:element name="layers-configuration" type="layersConfigurationType"/>
	<xsd:complexType name="layersConfigurationType">
		<xsd:sequence>
			<xsd:element type="layersType" name="layers"/>
			<xsd:element type="librariesType" name="libraries" minOccurs="0"/>
			<xsd:element type="classesType" name="classes" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="layersType">
		<xsd:sequence>
			<xsd:element type="xsd:string" name="layer" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
	The name of a layer. Each layer in the configuration must be referenced once and the
	order matches how the content is likely to change. Put layers that are frequently
	updated first, layers that are more stable (such as non-snapshot dependencies) last.
				]]></xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="librariesType">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
	Strategies that should be applied to libraries. If no strategies are defined, two
	layers are created out-of-the-box. A "snapshot-dependencies" layer with SNAPSHOT
	libraries and a "dependencies" layer with all the other libraries.
				]]></xsd:documentation>
		</xsd:annotation>
		<xsd:choice maxOccurs="unbounded">
			<xsd:element type="librariesLayerContentType" name="layer-content">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
	Strategy to apply on libraries.
				]]></xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:choice>
	</xsd:complexType>
	<xsd:complexType name="librariesLayerContentType" mixed="true">
		<xsd:sequence>
			<xsd:element type="filterType" name="coordinates" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute type="xsd:string" name="layer" use="required"/>
	</xsd:complexType>
	<xsd:complexType name="classesType">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
	Strategies that should be applied to classes. If no strategies are defined, a single
	"application" layer is created out-of-the-box.
				]]></xsd:documentation>
		</xsd:annotation>
		<xsd:choice maxOccurs="unbounded">
			<xsd:element type="classesLayerContentType" name="layer-content" maxOccurs="unbounded"
						 minOccurs="0">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
	Strategy to apply on classes.
				]]></xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:choice>
	</xsd:complexType>
	<xsd:complexType name="classesLayerContentType" mixed="true">
		<xsd:sequence>
			<xsd:element type="filterType" name="locations" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute type="xsd:string" name="layer" use="required"/>
	</xsd:complexType>

	<xsd:complexType name="filterType">
		<xsd:sequence>
			<xsd:element type="xsd:string" name="exclude" minOccurs="0" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
	Pattern of the elements to exclude. An exclude pattern takes precedence over an
	include pattern and must be declared first.
			]]></xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element type="xsd:string" name="include" minOccurs="0" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
	Pattern of the elements to include.
			]]></xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>

</xsd:schema>